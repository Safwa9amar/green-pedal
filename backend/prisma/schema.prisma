generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String               @id @default(uuid())
  name                    String
  email                   String               @unique
  phone                   String?
  password                String
  role                    String               @default("USER") // USER or ADMIN
  balance                 Float                @default(0)
  rentals                 Rental[]
  balanceTransactions     BalanceTransaction[]
  createdAt               DateTime             @default(now())
  emailConfirmed          Boolean              @default(false)
  confirmationCode        String?
  confirmationCodeExpires DateTime?
  photo                   String?
  idCardPhoto             File? // Relation to File model for ID card photo
  idCardPhotoUrl          String? // Direct URL for ID card photo (for quick access)
  idCardVerified          Boolean              @default(false) // Mark if admin verified
}

model File {
  id          String   @id @default(cuid()) // Unique ID
  name        String // Original file name (e.g. "report.pdf")
  mimeType    MimeType // File type (e.g. "image/png", "application/pdf")
  size        Int // File size in bytes
  url         String // Public URL or storage link
  path        String? // Local or storage path (optional if using cloud only)
  extension   String? // File extension (e.g. "pdf", "png")
  description String? // Optional description
  uploadedAt  DateTime @default(now()) // Upload timestamp
  updatedAt   DateTime @updatedAt // Last update timestamp

  // Relations (optional: connect file to a user or entity)
  userId String? @unique // If file belongs to a user
  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model BikeStation {
  id        String @id @default(uuid())
  name      String
  latitude  Float
  longitude Float
  capacity  Int
  bikes     Bike[]
}

model Bike {
  id                 String         @id @default(uuid())
  stationId          String
  name               String         @default("Green pedal Bike")
  qrCode             String?
  photo              String
  status             BikeStatus     @default(AVAILABLE)
  currentLocationLat Float?
  currentLocationLng Float?
  stationName        String?
  batteryLevel       String?
  station            BikeStation    @relation(fields: [stationId], references: [id])
  rentals            Rental[]
  locations          BikeLocation[]
}

enum BikeStatus {
  AVAILABLE
  IN_USE
  MAINTENANCE
}

model BikeLocation {
  id        String   @id @default(uuid())
  bikeId    String
  latitude  Float
  longitude Float
  timestamp DateTime @default(now())
  bike      Bike     @relation(fields: [bikeId], references: [id])
}

model Rental {
  id        Int          @id @default(autoincrement())
  userId    String
  bikeId    String
  startTime DateTime
  endTime   DateTime?
  totalCost Float?
  status    RentalStatus @default(ACTIVE) // ONGOING, COMPLETED
  user      User         @relation(fields: [userId], references: [id])
  bike      Bike         @relation(fields: [bikeId], references: [id])
}

model BalanceTransaction {
  id        String   @id @default(uuid())
  userId    String
  amount    Float
  type      String // RECHARGE, DEDUCTION
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

enum RentalStatus {
  ACTIVE
  COMPLETED
}

enum MimeType {
  // Images
  IMAGE_JPEG // "image/jpeg"
  IMAGE_PNG // "image/png"
  IMAGE_GIF // "image/gif"
  IMAGE_WEBP // "image/webp"
  IMAGE_SVG // "image/svg+xml"

  // Documents
  APPLICATION_PDF // "application/pdf"
  APPLICATION_DOC // "application/msword"
  APPLICATION_DOCX // "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
  APPLICATION_XLS // "application/vnd.ms-excel"
  APPLICATION_XLSX // "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
  APPLICATION_PPT // "application/vnd.ms-powerpoint"
  APPLICATION_PPTX // "application/vnd.openxmlformats-officedocument.presentationml.presentation"
  TEXT_PLAIN // "text/plain"
  TEXT_HTML // "text/html"

  // Audio
  AUDIO_MP3 // "audio/mpeg"
  AUDIO_WAV // "audio/wav"
  AUDIO_OGG // "audio/ogg"

  // Video
  VIDEO_MP4 // "video/mp4"
  VIDEO_WEBM // "video/webm"
  VIDEO_MOV // "video/quicktime"
}
